name: Deploy OpenTelemetry to EKS

on:
  workflow_dispatch:
  repository_dispatch:
    types: [deploy_otel]  # Match the event_type from the previous workflow

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout deployment repo
        uses: actions/checkout@v3

      - name: Clone Helm chart repository (Repo 2)
        run: |
          git clone https://github.com/shreya13p/opentelemetry-helm-charts.git

      - name: Set up Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Change to your AWS region

      - name: Install kubectl
        run: |
          curl -LO https://dl.k8s.io/release/v1.29.0/bin/linux/amd64/kubectl
          chmod +x kubectl && sudo mv kubectl /usr/local/bin/

      - name: Set up kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region us-east-1 --name otne3

      - name: Deploy Helm chart
        run: |
          helm upgrade otel-release ./opentelemetry-helm-charts/charts/opentelemetry-demo \
            --install \
            --namespace monitoring \
            --create-namespace

      - name: Wait for pods to become ready
        run: |
          kubectl wait --for=condition=Ready pod --all --namespace monitoring --timeout=180s

      - name: Check pod status
        run: |
          kubectl get pods -n monitoring
          STATUS=$(kubectl get pods -n monitoring --output=jsonpath='{.items[*].status.phase}')
          echo "Pod status: $STATUS"
          if [[ "$STATUS" != *"Running"* ]]; then
            echo "❌ One or more pods are not running."
            exit 1
          else
            echo "✅ All pods are running."
          fi
